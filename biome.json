{
  "$schema": "https://biomejs.dev/schemas/2.1.3/schema.json",
  "files": {
    "includes": [
      "**",
      "!**/.turbo",
      "!**/.source",
      "!**/examples/**/dist/**/*",
      "!**/examples/**/prisma/**/*",
      "!**/packages/**/prisma/**/*",
      "!**/packages/plugin-prisma/**/client/**/*",
      "!**/packages/plugin-prisma-utils/**/client/**/*",
      "!**/packages/deno/packages/**/*",
      "!**/packages/**/*/lib/**/*",
      "!**/packages/**/*/esm/**/*",
      "!**/packages/**/*/dts/**/*",
      "!**/website/.next/**/*",
      "!**/__generated__/**/*",
      "!**/packages/deno/packages",
      "!**/.vscode/**/*",
      "!**/generated.ts",
      "!**/codegen/schema/prisma-inputs.ts",
      "!**/schema.graphql"
    ]
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 100,
    "attributePosition": "auto"
  },
  "assist": { "actions": { "source": { "organizeImports": "on" } } },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "complexity": {
        "noExtraBooleanCast": "error",
        "noStaticOnlyClass": "error",
        "noUselessCatch": "error",
        "noUselessConstructor": "error",
        "noUselessLabel": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "error",
        "noUselessSwitchCase": "error",
        "noUselessTernary": "error",
        "noUselessTypeConstraint": "error",
        "noVoid": "error",
        "useFlatMap": "error",
        "useLiteralKeys": "error",
        "useOptionalChain": "error",
        "useRegexLiterals": "error",
        "noBannedTypes": "off",
        "noAdjacentSpacesInRegex": "error",
        "noArguments": "error",
        "noCommaOperator": "error",
        "useNumericLiterals": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "warn",
        "noConstructorReturn": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInnerDeclarations": "error",
        "noInvalidConstructorSuper": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedVariables": "error",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useYield": "error",
        "noInvalidBuiltinInstantiation": "error",
        "useValidTypeof": "error"
      },
      "security": {
        "noGlobalEval": "error"
      },
      "style": {
        "noNonNullAssertion": "off",
        "noInferrableTypes": "error",
        "noNamespace": "off",
        "noParameterAssign": "error",
        "noRestrictedGlobals": {
          "level": "error",
          "options": {
            "deniedGlobals": {
              "isFinite": "TODO: Add a custom message here.",
              "isNaN": "TODO: Add a custom message here.",
              "addEventListener": "TODO: Add a custom message here.",
              "blur": "TODO: Add a custom message here.",
              "close": "TODO: Add a custom message here.",
              "closed": "TODO: Add a custom message here.",
              "confirm": "TODO: Add a custom message here.",
              "defaultStatus": "TODO: Add a custom message here.",
              "defaultstatus": "TODO: Add a custom message here.",
              "event": "TODO: Add a custom message here.",
              "external": "TODO: Add a custom message here.",
              "find": "TODO: Add a custom message here.",
              "focus": "TODO: Add a custom message here.",
              "frameElement": "TODO: Add a custom message here.",
              "frames": "TODO: Add a custom message here.",
              "history": "TODO: Add a custom message here.",
              "innerHeight": "TODO: Add a custom message here.",
              "innerWidth": "TODO: Add a custom message here.",
              "length": "TODO: Add a custom message here.",
              "location": "TODO: Add a custom message here.",
              "locationbar": "TODO: Add a custom message here.",
              "menubar": "TODO: Add a custom message here.",
              "moveBy": "TODO: Add a custom message here.",
              "moveTo": "TODO: Add a custom message here.",
              "name": "TODO: Add a custom message here.",
              "onblur": "TODO: Add a custom message here.",
              "onerror": "TODO: Add a custom message here.",
              "onfocus": "TODO: Add a custom message here.",
              "onload": "TODO: Add a custom message here.",
              "onresize": "TODO: Add a custom message here.",
              "onunload": "TODO: Add a custom message here.",
              "open": "TODO: Add a custom message here.",
              "opener": "TODO: Add a custom message here.",
              "opera": "TODO: Add a custom message here.",
              "outerHeight": "TODO: Add a custom message here.",
              "outerWidth": "TODO: Add a custom message here.",
              "pageXOffset": "TODO: Add a custom message here.",
              "pageYOffset": "TODO: Add a custom message here.",
              "parent": "TODO: Add a custom message here.",
              "print": "TODO: Add a custom message here.",
              "removeEventListener": "TODO: Add a custom message here.",
              "resizeBy": "TODO: Add a custom message here.",
              "resizeTo": "TODO: Add a custom message here.",
              "screen": "TODO: Add a custom message here.",
              "screenLeft": "TODO: Add a custom message here.",
              "screenTop": "TODO: Add a custom message here.",
              "screenX": "TODO: Add a custom message here.",
              "screenY": "TODO: Add a custom message here.",
              "scroll": "TODO: Add a custom message here.",
              "scrollbars": "TODO: Add a custom message here.",
              "scrollBy": "TODO: Add a custom message here.",
              "scrollTo": "TODO: Add a custom message here.",
              "scrollX": "TODO: Add a custom message here.",
              "scrollY": "TODO: Add a custom message here.",
              "self": "TODO: Add a custom message here.",
              "status": "TODO: Add a custom message here.",
              "statusbar": "TODO: Add a custom message here.",
              "stop": "TODO: Add a custom message here.",
              "toolbar": "TODO: Add a custom message here.",
              "top": "TODO: Add a custom message here."
            }
          }
        },
        "useAsConstAssertion": "error",
        "useBlockStatements": "error",
        "useCollapsedElseIf": "error",
        "useConsistentArrayType": {
          "level": "error",
          "options": {
            "syntax": "shorthand"
          }
        },
        "useConst": "error",
        "useDefaultParameterLast": "error",
        "useExponentiationOperator": "error",
        "useLiteralEnumMembers": "error",
        "useNodejsImportProtocol": "error",
        "useNumberNamespace": "error",
        "useShorthandAssign": "error",
        "useShorthandFunctionType": "error",
        "useSingleVarDeclarator": "error",
        "useTemplate": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "noUnusedTemplateLiteral": "error",
        "noUselessElse": "error",
        "useArrayLiterals": "error"
      },
      "suspicious": {
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "off",
        "noExplicitAny": "error",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noLabelVar": "error",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noSelfCompare": "error",
        "noShadowRestrictedNames": "error",
        "noThenProperty": "error",
        "noUnsafeNegation": "error",
        "useAwait": "error",
        "useDefaultSwitchClauseLast": "error",
        "useGetterReturn": "error",
        "useIsArray": "error",
        "useNamespaceKeyword": "off",
        "noConfusingVoidType": "off",
        "noWith": "error",
        "noVar": "error"
      }
    }
  },
  "javascript": {
    "globals": ["PothosSchemaTypes"],
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "all",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "quoteStyle": "single",
      "attributePosition": "auto"
    }
  },
  "overrides": [
    {
      "includes": ["**/*.json", "**/*.yml", "**/*.yaml"],
      "formatter": {
        "indentStyle": "space"
      }
    },
    {
      "includes": ["**/global-types.ts"],
      "linter": {
        "rules": {
          "correctness": {
            "noUndeclaredVariables": "off",
            "noUnusedVariables": "off"
          }
        }
      }
    },
    {
      "includes": [
        "**/shield-plugin.ts",
        "**/packages/core/src/index.ts",
        "**/packages/core/src/types/global/**"
      ],
      "linter": {
        "rules": {
          "correctness": {
            "noUnusedVariables": "off"
          }
        }
      }
    },
    {
      "includes": ["**/packages/**/*/test/**/*", "**/packages/**/*/tests/**/*"],
      "javascript": {
        "globals": [
          "PothosSchemaTypes",
          "test",
          "expect",
          "describe",
          "it",
          "beforeEach",
          "afterEach",
          "beforeAll",
          "afterAll"
        ]
      },
      "linter": {
        "rules": {
          "complexity": {
            "noForEach": "off"
          }
        }
      }
    },
    {
      "includes": ["**/examples/nestjs*/**/*"],
      "linter": {
        "rules": {
          "style": {
            "useImportType": "off"
          }
        }
      }
    }
  ]
}
